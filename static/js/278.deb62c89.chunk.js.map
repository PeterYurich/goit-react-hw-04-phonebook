{"version":3,"file":"static/js/278.deb62c89.chunk.js","mappings":"yNAqEA,UAhEA,WACE,OAAoCA,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAsCF,EAAAA,EAAAA,UAAS,IAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACA,GAA4CN,EAAAA,EAAAA,UAAS,IAArD,eAAOO,EAAP,KAAuBC,EAAvB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SAoC/B,OAzBAC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAIA,IAAMG,EAAsB,mCAAG,2FAC7BT,GAAW,GADkB,mBAGRU,EAAAA,EAAAA,IAAmBJ,EAAO,GAHlB,OAGrBK,EAHqB,OAI3BT,EAAkBS,EAAKC,SAJI,gDAM3BC,QAAQC,IAAR,MAN2B,yBAQ3Bd,GAAW,GARgB,4EAAH,qDAW5BS,IACAb,EAAc,GAdb,CAeF,GAAE,CAACC,EAAaS,KAQf,iBAAKS,UAAU,oBAAf,WACE,iBAAMC,SApCV,SAA2BC,GACzBA,EAAIC,iBACe,KAAfvB,IAGJG,EAAeH,GACfU,EAAgB,CAAEC,MAAOX,IAC1B,EA6BG,UACE,4BACE,kBAAOwB,KAAK,OAAOC,SAT3B,SAAuBH,GACrB,IAAQI,EAAUJ,EAAIK,OAAdD,MACRzB,EAAcyB,EACf,EAMmDA,MAAO1B,QAGtDI,IAAW,yCACZ,wBACGE,EAAesB,KAAI,SAAAC,GAAK,OACvB,yBACE,UAAC,KAAD,CAAMT,UAAU,YAAYU,GAAE,kBAAaD,EAAME,IAAjD,UACG,IADH,KAEKF,EAAMG,UAHJH,EAAME,GADQ,QAWhC,C","sources":["pages/Movies/Movies.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\n\nimport { getRequestedMovies } from '../../api/getMovies';\n\nfunction Movies() {\n  const [inputValue, setInputValue] = useState('');\n  const [searchValue, setSearchValue] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [moviesToRender, setMoviesToRender] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query')\n  \n  function saveSearchRequest(evt) {\n    evt.preventDefault();\n    if (inputValue === '') {\n      return;\n    }\n    setSearchValue(inputValue);\n    setSearchParams({ query: inputValue });\n  }\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    const getMoviesForMoviesPage = async () => {\n      setLoading(true);\n      try {\n        const data = await getRequestedMovies(query, 1);\n        setMoviesToRender(data.results);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getMoviesForMoviesPage();\n    setInputValue('');\n  }, [searchValue, query]);\n\n  function changeHandler(evt) {\n    const { value } = evt.target;\n    setInputValue(value);\n  }\n\n  return (\n    <div className=\"container section\">\n      <form onSubmit={saveSearchRequest}>\n        <label>\n          <input type=\"text\" onChange={changeHandler} value={inputValue} />\n        </label>\n      </form>\n      {loading && <div>LOADING...</div>}\n      <ul>\n        {moviesToRender.map(movie => (\n          <li key={movie.id}>\n            <Link className=\"list_item\" to={`/movies/${movie.id}`}>\n              {' '}\n              - {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Movies"],"names":["useState","inputValue","setInputValue","searchValue","setSearchValue","loading","setLoading","moviesToRender","setMoviesToRender","useSearchParams","searchParams","setSearchParams","query","get","useEffect","getMoviesForMoviesPage","getRequestedMovies","data","results","console","log","className","onSubmit","evt","preventDefault","type","onChange","value","target","map","movie","to","id","title"],"sourceRoot":""}